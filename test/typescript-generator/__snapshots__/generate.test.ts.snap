// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`end-to-end test generates the same code for pet store that it did on the last test run 1`] = `
"paths/pet.ts:import type { HTTP_POST } from "../path-types/pet.types.js";
import type { HTTP_PUT } from "../path-types/pet.types.js";

export const POST: HTTP_POST = ($) => {
  return $.response[200].random();
};

export const PUT: HTTP_PUT = ($) => {
  return $.response[200].random();
};
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 2`] = `
"path-types/pet.types.ts:// This code was automatically generated from an OpenAPI description.
// Do not edit this file. Edit the OpenAPI file instead.
// For more information, see https://github.com/pmcelhaney/counterfact/blob/main/docs/faq-generated-code.md

import type { WideOperationArgument } from "../types.d.ts";
import type { OmitValueWhenNever } from "../types.d.ts";
import type { Context } from "@@CONTEXT_FILE_TOKEN@@";
import type { ResponseBuilderFactory } from "../types.d.ts";
import type { Pet } from "../components/Pet.js";

export type HTTP_POST = (
  $: OmitValueWhenNever<{
    query: never;
    path: never;
    header: never;
    body: Pet;
    context: Context;
    response: ResponseBuilderFactory<{
      200: {
        headers: never;
        requiredHeaders: never;
        content: {
          "application/xml": {
            schema: Pet;
          };
          "application/json": {
            schema: Pet;
          };
        };
      };
      405: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: 200;
      contentType?: "application/xml";
      body?: Pet;
    }
  | {
      status: 200;
      contentType?: "application/json";
      body?: Pet;
    }
  | {
      status: 405;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };

export type HTTP_PUT = (
  $: OmitValueWhenNever<{
    query: never;
    path: never;
    header: never;
    body: Pet;
    context: Context;
    response: ResponseBuilderFactory<{
      200: {
        headers: never;
        requiredHeaders: never;
        content: {
          "application/xml": {
            schema: Pet;
          };
          "application/json": {
            schema: Pet;
          };
        };
      };
      400: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
      404: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
      405: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: 200;
      contentType?: "application/xml";
      body?: Pet;
    }
  | {
      status: 200;
      contentType?: "application/json";
      body?: Pet;
    }
  | {
      status: 400;
    }
  | {
      status: 404;
    }
  | {
      status: 405;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 3`] = `
"paths/pet/findByStatus.ts:import type { HTTP_GET } from "../../path-types/pet/findByStatus.types.js";

export const GET: HTTP_GET = ($) => {
  return $.response[200].random();
};
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 4`] = `
"path-types/pet/findByStatus.types.ts:// This code was automatically generated from an OpenAPI description.
// Do not edit this file. Edit the OpenAPI file instead.
// For more information, see https://github.com/pmcelhaney/counterfact/blob/main/docs/faq-generated-code.md

import type { WideOperationArgument } from "../../types.d.ts";
import type { OmitValueWhenNever } from "../../types.d.ts";
import type { Context } from "@@CONTEXT_FILE_TOKEN@@";
import type { ResponseBuilderFactory } from "../../types.d.ts";
import type { Pet } from "../../components/Pet.js";

export type HTTP_GET = (
  $: OmitValueWhenNever<{
    query: { status?: "available" | "pending" | "sold" };
    path: never;
    header: never;
    body: never;
    context: Context;
    response: ResponseBuilderFactory<{
      200: {
        headers: never;
        requiredHeaders: never;
        content: {
          "application/xml": {
            schema: Array<Pet>;
          };
          "application/json": {
            schema: Array<Pet>;
          };
        };
      };
      400: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: 200;
      contentType?: "application/xml";
      body?: Array<Pet>;
    }
  | {
      status: 200;
      contentType?: "application/json";
      body?: Array<Pet>;
    }
  | {
      status: 400;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 5`] = `
"paths/pet/findByTags.ts:import type { HTTP_GET } from "../../path-types/pet/findByTags.types.js";

export const GET: HTTP_GET = ($) => {
  return $.response[200].random();
};
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 6`] = `
"path-types/pet/findByTags.types.ts:// This code was automatically generated from an OpenAPI description.
// Do not edit this file. Edit the OpenAPI file instead.
// For more information, see https://github.com/pmcelhaney/counterfact/blob/main/docs/faq-generated-code.md

import type { WideOperationArgument } from "../../types.d.ts";
import type { OmitValueWhenNever } from "../../types.d.ts";
import type { Context } from "@@CONTEXT_FILE_TOKEN@@";
import type { ResponseBuilderFactory } from "../../types.d.ts";
import type { Pet } from "../../components/Pet.js";

export type HTTP_GET = (
  $: OmitValueWhenNever<{
    query: { tags?: Array<string> };
    path: never;
    header: never;
    body: never;
    context: Context;
    response: ResponseBuilderFactory<{
      200: {
        headers: never;
        requiredHeaders: never;
        content: {
          "application/xml": {
            schema: Array<Pet>;
          };
          "application/json": {
            schema: Array<Pet>;
          };
        };
      };
      400: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: 200;
      contentType?: "application/xml";
      body?: Array<Pet>;
    }
  | {
      status: 200;
      contentType?: "application/json";
      body?: Array<Pet>;
    }
  | {
      status: 400;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 7`] = `
"paths/pet/{petId}.ts:import type { HTTP_GET } from "../../path-types/pet/{petId}.types.js";
import type { HTTP_POST } from "../../path-types/pet/{petId}.types.js";
import type { HTTP_DELETE } from "../../path-types/pet/{petId}.types.js";

export const GET: HTTP_GET = ($) => {
  return $.response[200].random();
};

export const POST: HTTP_POST = ($) => {
  return $.response[405];
};

export const DELETE: HTTP_DELETE = ($) => {
  return $.response[400];
};
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 8`] = `
"path-types/pet/{petId}.types.ts:// This code was automatically generated from an OpenAPI description.
// Do not edit this file. Edit the OpenAPI file instead.
// For more information, see https://github.com/pmcelhaney/counterfact/blob/main/docs/faq-generated-code.md

import type { WideOperationArgument } from "../../types.d.ts";
import type { OmitValueWhenNever } from "../../types.d.ts";
import type { Context } from "@@CONTEXT_FILE_TOKEN@@";
import type { ResponseBuilderFactory } from "../../types.d.ts";
import type { Pet } from "../../components/Pet.js";

export type HTTP_GET = (
  $: OmitValueWhenNever<{
    query: never;
    path: { petId: number };
    header: never;
    body: never;
    context: Context;
    response: ResponseBuilderFactory<{
      200: {
        headers: never;
        requiredHeaders: never;
        content: {
          "application/xml": {
            schema: Pet;
          };
          "application/json": {
            schema: Pet;
          };
        };
      };
      400: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
      404: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: 200;
      contentType?: "application/xml";
      body?: Pet;
    }
  | {
      status: 200;
      contentType?: "application/json";
      body?: Pet;
    }
  | {
      status: 400;
    }
  | {
      status: 404;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };

export type HTTP_POST = (
  $: OmitValueWhenNever<{
    query: { name?: number; status?: string };
    path: { petId: number };
    header: never;
    body: never;
    context: Context;
    response: ResponseBuilderFactory<{
      405: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: 405;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };

export type HTTP_DELETE = (
  $: OmitValueWhenNever<{
    query: never;
    path: { petId: string };
    header: { api_key?: string };
    body: never;
    context: Context;
    response: ResponseBuilderFactory<{
      400: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: 400;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 9`] = `
"paths/pet/{petId}/uploadImage.ts:import type { HTTP_POST } from "../../../path-types/pet/{petId}/uploadImage.types.js";

export const POST: HTTP_POST = ($) => {
  return $.response[200].random();
};
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 10`] = `
"path-types/pet/{petId}/uploadImage.types.ts:// This code was automatically generated from an OpenAPI description.
// Do not edit this file. Edit the OpenAPI file instead.
// For more information, see https://github.com/pmcelhaney/counterfact/blob/main/docs/faq-generated-code.md

import type { WideOperationArgument } from "../../../types.d.ts";
import type { OmitValueWhenNever } from "../../../types.d.ts";
import type { Context } from "@@CONTEXT_FILE_TOKEN@@";
import type { ResponseBuilderFactory } from "../../../types.d.ts";
import type { ApiResponse } from "../../../components/ApiResponse.js";

export type HTTP_POST = (
  $: OmitValueWhenNever<{
    query: { additionalMetadata?: number };
    path: { petId: number };
    header: never;
    body: never;
    context: Context;
    response: ResponseBuilderFactory<{
      200: {
        headers: never;
        requiredHeaders: never;
        content: {
          "application/json": {
            schema: ApiResponse;
          };
        };
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: 200;
      contentType?: "application/json";
      body?: ApiResponse;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 11`] = `
"paths/store/inventory.ts:import type { HTTP_GET } from "../../path-types/store/inventory.types.js";

export const GET: HTTP_GET = ($) => {
  return $.response[200].random();
};
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 12`] = `
"path-types/store/inventory.types.ts:// This code was automatically generated from an OpenAPI description.
// Do not edit this file. Edit the OpenAPI file instead.
// For more information, see https://github.com/pmcelhaney/counterfact/blob/main/docs/faq-generated-code.md

import type { WideOperationArgument } from "../../types.d.ts";
import type { OmitValueWhenNever } from "../../types.d.ts";
import type { Context } from "@@CONTEXT_FILE_TOKEN@@";
import type { ResponseBuilderFactory } from "../../types.d.ts";

export type HTTP_GET = (
  $: OmitValueWhenNever<{
    query: never;
    path: never;
    header: never;
    body: never;
    context: Context;
    response: ResponseBuilderFactory<{
      200: {
        headers: never;
        requiredHeaders: never;
        content: {
          "application/json": {
            schema: { [key: string]: number };
          };
        };
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: 200;
      contentType?: "application/json";
      body?: { [key: string]: number };
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 13`] = `
"paths/store/order.ts:import type { HTTP_POST } from "../../path-types/store/order.types.js";

export const POST: HTTP_POST = ($) => {
  return $.response[200].random();
};
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 14`] = `
"path-types/store/order.types.ts:// This code was automatically generated from an OpenAPI description.
// Do not edit this file. Edit the OpenAPI file instead.
// For more information, see https://github.com/pmcelhaney/counterfact/blob/main/docs/faq-generated-code.md

import type { WideOperationArgument } from "../../types.d.ts";
import type { OmitValueWhenNever } from "../../types.d.ts";
import type { Context } from "@@CONTEXT_FILE_TOKEN@@";
import type { ResponseBuilderFactory } from "../../types.d.ts";
import type { Order } from "../../components/Order.js";

export type HTTP_POST = (
  $: OmitValueWhenNever<{
    query: never;
    path: never;
    header: never;
    body: Order;
    context: Context;
    response: ResponseBuilderFactory<{
      200: {
        headers: never;
        requiredHeaders: never;
        content: {
          "application/json": {
            schema: Order;
          };
        };
      };
      405: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: 200;
      contentType?: "application/json";
      body?: Order;
    }
  | {
      status: 405;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 15`] = `
"paths/store/order/{orderId}.ts:import type { HTTP_GET } from "../../../path-types/store/order/{orderId}.types.js";
import type { HTTP_DELETE } from "../../../path-types/store/order/{orderId}.types.js";

export const GET: HTTP_GET = ($) => {
  return $.response[200].random();
};

export const DELETE: HTTP_DELETE = ($) => {
  return $.response[400];
};
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 16`] = `
"path-types/store/order/{orderId}.types.ts:// This code was automatically generated from an OpenAPI description.
// Do not edit this file. Edit the OpenAPI file instead.
// For more information, see https://github.com/pmcelhaney/counterfact/blob/main/docs/faq-generated-code.md

import type { WideOperationArgument } from "../../../types.d.ts";
import type { OmitValueWhenNever } from "../../../types.d.ts";
import type { Context } from "@@CONTEXT_FILE_TOKEN@@";
import type { ResponseBuilderFactory } from "../../../types.d.ts";
import type { Order } from "../../../components/Order.js";

export type HTTP_GET = (
  $: OmitValueWhenNever<{
    query: never;
    path: { orderId: number };
    header: never;
    body: never;
    context: Context;
    response: ResponseBuilderFactory<{
      200: {
        headers: never;
        requiredHeaders: never;
        content: {
          "application/xml": {
            schema: Order;
          };
          "application/json": {
            schema: Order;
          };
        };
      };
      400: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
      404: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: 200;
      contentType?: "application/xml";
      body?: Order;
    }
  | {
      status: 200;
      contentType?: "application/json";
      body?: Order;
    }
  | {
      status: 400;
    }
  | {
      status: 404;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };

export type HTTP_DELETE = (
  $: OmitValueWhenNever<{
    query: never;
    path: { orderId: number };
    header: never;
    body: never;
    context: Context;
    response: ResponseBuilderFactory<{
      400: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
      404: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: 400;
    }
  | {
      status: 404;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 17`] = `
"paths/user.ts:import type { HTTP_POST } from "../path-types/user.types.js";

export const POST: HTTP_POST = ($) => {
  return $.response[200].random();
};
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 18`] = `
"path-types/user.types.ts:// This code was automatically generated from an OpenAPI description.
// Do not edit this file. Edit the OpenAPI file instead.
// For more information, see https://github.com/pmcelhaney/counterfact/blob/main/docs/faq-generated-code.md

import type { WideOperationArgument } from "../types.d.ts";
import type { OmitValueWhenNever } from "../types.d.ts";
import type { Context } from "@@CONTEXT_FILE_TOKEN@@";
import type { ResponseBuilderFactory } from "../types.d.ts";
import type { HttpStatusCode } from "../types.d.ts";
import type { User } from "../components/User.js";

export type HTTP_POST = (
  $: OmitValueWhenNever<{
    query: never;
    path: never;
    header: never;
    body: User;
    context: Context;
    response: ResponseBuilderFactory<{
      [statusCode in HttpStatusCode]: {
        headers: never;
        requiredHeaders: never;
        content: {
          "application/json": {
            schema: User;
          };
          "application/xml": {
            schema: User;
          };
        };
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: number | undefined;
      contentType?: "application/json";
      body?: User;
    }
  | {
      status: number | undefined;
      contentType?: "application/xml";
      body?: User;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 19`] = `
"paths/user/createWithList.ts:import type { HTTP_POST } from "../../path-types/user/createWithList.types.js";

export const POST: HTTP_POST = ($) => {
  return $.response[200].random();
};
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 20`] = `
"path-types/user/createWithList.types.ts:// This code was automatically generated from an OpenAPI description.
// Do not edit this file. Edit the OpenAPI file instead.
// For more information, see https://github.com/pmcelhaney/counterfact/blob/main/docs/faq-generated-code.md

import type { WideOperationArgument } from "../../types.d.ts";
import type { OmitValueWhenNever } from "../../types.d.ts";
import type { Context } from "@@CONTEXT_FILE_TOKEN@@";
import type { ResponseBuilderFactory } from "../../types.d.ts";
import type { HttpStatusCode } from "../../types.d.ts";
import type { User } from "../../components/User.js";

export type HTTP_POST = (
  $: OmitValueWhenNever<{
    query: never;
    path: never;
    header: never;
    body: Array<User>;
    context: Context;
    response: ResponseBuilderFactory<{
      200: {
        headers: never;
        requiredHeaders: never;
        content: {
          "application/xml": {
            schema: User;
          };
          "application/json": {
            schema: User;
          };
        };
      };
      [statusCode in Exclude<HttpStatusCode, 200>]: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: 200;
      contentType?: "application/xml";
      body?: User;
    }
  | {
      status: 200;
      contentType?: "application/json";
      body?: User;
    }
  | {
      status: number | undefined;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 21`] = `
"paths/user/login.ts:import type { HTTP_GET } from "../../path-types/user/login.types.js";

export const GET: HTTP_GET = ($) => {
  return $.response[200].random();
};
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 22`] = `
"path-types/user/login.types.ts:// This code was automatically generated from an OpenAPI description.
// Do not edit this file. Edit the OpenAPI file instead.
// For more information, see https://github.com/pmcelhaney/counterfact/blob/main/docs/faq-generated-code.md

import type { WideOperationArgument } from "../../types.d.ts";
import type { OmitValueWhenNever } from "../../types.d.ts";
import type { Context } from "@@CONTEXT_FILE_TOKEN@@";
import type { ResponseBuilderFactory } from "../../types.d.ts";

export type HTTP_GET = (
  $: OmitValueWhenNever<{
    query: { username?: string; password?: string };
    path: never;
    header: never;
    body: never;
    context: Context;
    response: ResponseBuilderFactory<{
      200: {
        headers: {
          "X-Rate-Limit": { schema: number };
          "X-Expires-After": { schema: string };
        };
        requiredHeaders: never;
        content: {
          "application/xml": {
            schema: string;
          };
          "application/json": {
            schema: string;
          };
        };
      };
      400: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: 200;
      contentType?: "application/xml";
      body?: string;
    }
  | {
      status: 200;
      contentType?: "application/json";
      body?: string;
    }
  | {
      status: 400;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 23`] = `
"paths/user/logout.ts:import type { HTTP_GET } from "../../path-types/user/logout.types.js";

export const GET: HTTP_GET = ($) => {
  return $.response[200];
};
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 24`] = `
"path-types/user/logout.types.ts:// This code was automatically generated from an OpenAPI description.
// Do not edit this file. Edit the OpenAPI file instead.
// For more information, see https://github.com/pmcelhaney/counterfact/blob/main/docs/faq-generated-code.md

import type { WideOperationArgument } from "../../types.d.ts";
import type { OmitValueWhenNever } from "../../types.d.ts";
import type { Context } from "@@CONTEXT_FILE_TOKEN@@";
import type { ResponseBuilderFactory } from "../../types.d.ts";
import type { HttpStatusCode } from "../../types.d.ts";

export type HTTP_GET = (
  $: OmitValueWhenNever<{
    query: never;
    path: never;
    header: never;
    body: never;
    context: Context;
    response: ResponseBuilderFactory<{
      [statusCode in HttpStatusCode]: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: number | undefined;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 25`] = `
"paths/user/{username}.ts:import type { HTTP_GET } from "../../path-types/user/{username}.types.js";
import type { HTTP_PUT } from "../../path-types/user/{username}.types.js";
import type { HTTP_DELETE } from "../../path-types/user/{username}.types.js";

export const GET: HTTP_GET = ($) => {
  return $.response[200].random();
};

export const PUT: HTTP_PUT = ($) => {
  return $.response[200];
};

export const DELETE: HTTP_DELETE = ($) => {
  return $.response[400];
};
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 26`] = `
"path-types/user/{username}.types.ts:// This code was automatically generated from an OpenAPI description.
// Do not edit this file. Edit the OpenAPI file instead.
// For more information, see https://github.com/pmcelhaney/counterfact/blob/main/docs/faq-generated-code.md

import type { WideOperationArgument } from "../../types.d.ts";
import type { OmitValueWhenNever } from "../../types.d.ts";
import type { Context } from "@@CONTEXT_FILE_TOKEN@@";
import type { ResponseBuilderFactory } from "../../types.d.ts";
import type { HttpStatusCode } from "../../types.d.ts";
import type { User } from "../../components/User.js";

export type HTTP_GET = (
  $: OmitValueWhenNever<{
    query: never;
    path: { username: string };
    header: never;
    body: never;
    context: Context;
    response: ResponseBuilderFactory<{
      200: {
        headers: never;
        requiredHeaders: never;
        content: {
          "application/xml": {
            schema: User;
          };
          "application/json": {
            schema: User;
          };
        };
      };
      400: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
      404: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: 200;
      contentType?: "application/xml";
      body?: User;
    }
  | {
      status: 200;
      contentType?: "application/json";
      body?: User;
    }
  | {
      status: 400;
    }
  | {
      status: 404;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };

export type HTTP_PUT = (
  $: OmitValueWhenNever<{
    query: never;
    path: { username: string };
    header: never;
    body: User;
    context: Context;
    response: ResponseBuilderFactory<{
      [statusCode in HttpStatusCode]: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: number | undefined;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };

export type HTTP_DELETE = (
  $: OmitValueWhenNever<{
    query: never;
    path: { username: string };
    header: never;
    body: never;
    context: Context;
    response: ResponseBuilderFactory<{
      400: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
      404: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => "COUNTERFACT_RESPONSE";
    user: never;
  }>,
) =>
  | {
      status: 400;
    }
  | {
      status: 404;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | "COUNTERFACT_RESPONSE"
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: "COUNTERFACT_RESPONSE" };
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 27`] = `
"components/Pet.ts:import type { Category } from "./Category.js";
import type { Tag } from "./Tag.js";

export type Pet = {
  id?: number;
  name: string;
  category?: Category;
  photoUrls: Array<string>;
  tags?: Array<Tag>;
  status?: "available" | "pending" | "sold";
};
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 28`] = `
"components/ApiResponse.ts:export type ApiResponse = { code?: number; type?: string; message?: string };
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 29`] = `
"components/Order.ts:export type Order = {
  id?: number;
  petId?: number;
  quantity?: number;
  shipDate?: string;
  status?: "placed" | "approved" | "delivered";
  complete?: boolean;
};
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 30`] = `
"components/User.ts:export type User = {
  id?: number;
  username?: string;
  firstName?: string;
  lastName?: string;
  email?: string;
  password?: string;
  phone?: string;
  userStatus?: number;
};
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 31`] = `
"components/Category.ts:export type Category = { id?: number; name?: string };
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 32`] = `
"components/Tag.ts:export type Tag = { id?: number; name?: string };
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 33`] = `
".cache
"
`;

exports[`end-to-end test generates the same code for pet store that it did on the last test run 34`] = `
"This directory contains compiled JS files from the paths directory. Do not edit these files directly.
"
`;
